{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, HostBinding, Output, ViewChild, NgModule } from '@angular/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { merge } from 'lodash';\nimport { Chart, registerables } from 'chart.js';\nimport { customTooltips } from '@coreui/chartjs';\nconst _c0 = [\"canvasElement\"];\nconst _c1 = [\"*\"];\nChart.register(...registerables);\nlet nextId = 0;\n\nclass ChartjsComponent {\n  constructor(elementRef, ngZone, renderer) {\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.customTooltips = true;\n    this.id = `c-chartjs-${nextId++}`;\n    this.plugins = [];\n    this._redraw = false;\n    this.type = 'bar';\n    this.wrapper = true;\n    this.getDatasetAtEvent = new EventEmitter();\n    this.getElementAtEvent = new EventEmitter();\n    this.getElementsAtEvent = new EventEmitter();\n  }\n\n  set height(value) {\n    this._height = coerceNumberProperty(value);\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  set redraw(value) {\n    this._redraw = coerceBooleanProperty(value);\n  }\n\n  get redraw() {\n    return this._redraw;\n  }\n\n  set width(value) {\n    this._width = coerceNumberProperty(value);\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get hostClasses() {\n    return {\n      'chart-wrapper': this.wrapper\n    };\n  }\n\n  ngAfterViewInit() {\n    this.chartRender(); // this.chartUpdate();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['data'] && !changes['data'].firstChange) {\n      this.chartUpdate();\n    }\n  }\n\n  ngOnDestroy() {\n    this.chartDestroy();\n  }\n\n  handleOnClick($event) {\n    if (!this.chart) return;\n    const datasetAtEvent = this.chart.getElementsAtEventForMode($event, 'dataset', {\n      intersect: true\n    }, false);\n    this.getDatasetAtEvent.emit(datasetAtEvent);\n    const elementAtEvent = this.chart.getElementsAtEventForMode($event, 'nearest', {\n      intersect: true\n    }, false);\n    this.getElementAtEvent.emit(elementAtEvent);\n    const elementsAtEvent = this.chart.getElementsAtEventForMode($event, 'index', {\n      intersect: true\n    }, false);\n    this.getElementsAtEvent.emit(elementsAtEvent);\n  }\n\n  chartDestroy() {\n    var _a;\n\n    (_a = this.chart) === null || _a === void 0 ? void 0 : _a.destroy();\n  }\n\n  chartRender() {\n    if (!this.canvasElement) return;\n    const ctx = this.canvasElement.nativeElement.getContext('2d');\n    this.ngZone.runOutsideAngular(() => {\n      const config = this.chartConfig();\n\n      if (config) {\n        this.chart = new Chart(ctx, config);\n        setTimeout(() => {\n          this.renderer.setStyle(this.canvasElement.nativeElement, 'display', 'block');\n        });\n      }\n    });\n  }\n\n  chartUpdate() {\n    if (!this.chart) return;\n\n    if (this.redraw) {\n      this.chartDestroy();\n      setTimeout(() => {\n        this.chartRender();\n      });\n      return;\n    }\n\n    const config = this.chartConfig();\n\n    if (this.options) {\n      Object.assign(this.chart.options, config.options);\n    }\n\n    if (!this.chart.config.data) {\n      this.chart.config.data = Object.assign({}, config.data);\n      this.chartUpdateOutsideAngular();\n    }\n\n    if (this.chart) {\n      Object.assign(this.chart.config.options, config.options);\n      Object.assign(this.chart.config.plugins, config.plugins);\n      Object.assign(this.chart.config.data, config.data);\n    }\n\n    this.chartUpdateOutsideAngular();\n  }\n\n  chartUpdateOutsideAngular() {\n    setTimeout(() => {\n      this.ngZone.runOutsideAngular(() => {\n        var _a;\n\n        (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\n      });\n    });\n  }\n\n  chartToBase64Image() {\n    var _a;\n\n    return (_a = this.chart) === null || _a === void 0 ? void 0 : _a.toBase64Image();\n  }\n\n  chartDataConfig() {\n    var _a, _b, _c, _d;\n\n    return {\n      labels: (_b = (_a = this.data) === null || _a === void 0 ? void 0 : _a.labels) !== null && _b !== void 0 ? _b : [],\n      datasets: (_d = (_c = this.data) === null || _c === void 0 ? void 0 : _c.datasets) !== null && _d !== void 0 ? _d : []\n    };\n  }\n\n  chartOptions() {\n    return this.options;\n  }\n\n  chartConfig() {\n    this.chartCustomTooltips();\n    return {\n      data: this.chartDataConfig(),\n      options: this.chartOptions(),\n      plugins: this.plugins,\n      type: this.type\n    };\n  }\n\n  chartCustomTooltips() {\n    var _a, _b, _c;\n\n    if (this.customTooltips) {\n      const options = this.options; // @ts-ignore\n\n      const plugins = (_a = this.options) === null || _a === void 0 ? void 0 : _a.plugins; // @ts-ignore\n\n      const tooltip = (_c = (_b = this.options) === null || _b === void 0 ? void 0 : _b.plugins) === null || _c === void 0 ? void 0 : _c.tooltip;\n      this.options = merge(Object.assign(Object.assign({}, options), {\n        plugins: Object.assign(Object.assign({}, plugins), {\n          tooltip: Object.assign(Object.assign({}, tooltip), {\n            enabled: false,\n            mode: 'index',\n            position: 'nearest',\n            external: customTooltips\n          })\n        })\n      }));\n    }\n  }\n\n}\n\nChartjsComponent.ɵfac = function ChartjsComponent_Factory(t) {\n  return new (t || ChartjsComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nChartjsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartjsComponent,\n  selectors: [[\"c-chart\"]],\n  viewQuery: function ChartjsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasElement = _t.first);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function ChartjsComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.hostClasses);\n      i0.ɵɵstyleProp(\"height\", ctx.height, \"px\")(\"width\", ctx.width, \"px\");\n    }\n  },\n  inputs: {\n    customTooltips: \"customTooltips\",\n    data: \"data\",\n    height: \"height\",\n    id: \"id\",\n    options: \"options\",\n    plugins: \"plugins\",\n    redraw: \"redraw\",\n    type: \"type\",\n    width: \"width\",\n    wrapper: \"wrapper\"\n  },\n  outputs: {\n    getDatasetAtEvent: \"getDatasetAtEvent\",\n    getElementAtEvent: \"getElementAtEvent\",\n    getElementsAtEvent: \"getElementsAtEvent\"\n  },\n  exportAs: [\"cChart\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 3,\n  consts: [[\"role\", \"img\", 2, \"display\", \"none\", 3, \"height\", \"id\", \"width\", \"click\"], [\"canvasElement\", \"\"]],\n  template: function ChartjsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"canvas\", 0, 1);\n      i0.ɵɵlistener(\"click\", function ChartjsComponent_Template_canvas_click_0_listener($event) {\n        return ctx.handleOnClick($event);\n      });\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"height\", ctx.height)(\"id\", ctx.id)(\"width\", ctx.width);\n    }\n  },\n  styles: [\".chart-wrapper[_nghost-%COMP%]{display:block}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartjsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'c-chart',\n      exportAs: 'cChart',\n      template: \"<canvas\\r\\n  #canvasElement\\r\\n  (click)=\\\"handleOnClick($event)\\\"\\r\\n  [height]=\\\"height\\\"\\r\\n  [id]=\\\"id\\\"\\r\\n  [width]=\\\"width\\\"\\r\\n  role=\\\"img\\\"\\r\\n  style=\\\"display: none;\\\"\\r\\n>\\r\\n  <ng-content></ng-content>\\r\\n</canvas>\\r\\n\",\n      styles: [\":host.chart-wrapper{display:block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    customTooltips: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    height: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    plugins: [{\n      type: Input\n    }],\n    redraw: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    width: [{\n      type: HostBinding,\n      args: ['style.width.px']\n    }, {\n      type: Input\n    }],\n    wrapper: [{\n      type: Input\n    }],\n    getDatasetAtEvent: [{\n      type: Output\n    }],\n    getElementAtEvent: [{\n      type: Output\n    }],\n    getElementsAtEvent: [{\n      type: Output\n    }],\n    canvasElement: [{\n      type: ViewChild,\n      args: ['canvasElement']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }]\n  });\n})();\n\nclass ChartjsModule {}\n\nChartjsModule.ɵfac = function ChartjsModule_Factory(t) {\n  return new (t || ChartjsModule)();\n};\n\nChartjsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartjsModule\n});\nChartjsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartjsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ChartjsComponent],\n      exports: [ChartjsComponent]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of coreui-angular-chartjs\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { ChartjsComponent, ChartjsModule };","map":{"version":3,"sources":["C:/Users/david/Desktop/CLONECLOWN/CloneClownWeb/node_modules/@coreui/angular-chartjs/fesm2015/coreui-angular-chartjs.mjs"],"names":["i0","EventEmitter","Component","Input","HostBinding","Output","ViewChild","NgModule","coerceNumberProperty","coerceBooleanProperty","merge","Chart","registerables","customTooltips","register","nextId","ChartjsComponent","constructor","elementRef","ngZone","renderer","id","plugins","_redraw","type","wrapper","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","height","value","_height","redraw","width","_width","hostClasses","ngAfterViewInit","chartRender","ngOnChanges","changes","firstChange","chartUpdate","ngOnDestroy","chartDestroy","handleOnClick","$event","chart","datasetAtEvent","getElementsAtEventForMode","intersect","emit","elementAtEvent","elementsAtEvent","_a","destroy","canvasElement","ctx","nativeElement","getContext","runOutsideAngular","config","chartConfig","setTimeout","setStyle","options","Object","assign","data","chartUpdateOutsideAngular","update","chartToBase64Image","toBase64Image","chartDataConfig","_b","_c","_d","labels","datasets","chartOptions","chartCustomTooltips","tooltip","enabled","mode","position","external","ɵfac","ElementRef","NgZone","Renderer2","ɵcmp","args","selector","exportAs","template","styles","ChartjsModule","ɵmod","ɵinj","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, HostBinding, Output, ViewChild, NgModule } from '@angular/core';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { merge } from 'lodash';\nimport { Chart, registerables } from 'chart.js';\nimport { customTooltips } from '@coreui/chartjs';\n\nChart.register(...registerables);\r\nlet nextId = 0;\r\nclass ChartjsComponent {\r\n    constructor(elementRef, ngZone, renderer) {\r\n        this.elementRef = elementRef;\r\n        this.ngZone = ngZone;\r\n        this.renderer = renderer;\r\n        this.customTooltips = true;\r\n        this.id = `c-chartjs-${nextId++}`;\r\n        this.plugins = [];\r\n        this._redraw = false;\r\n        this.type = 'bar';\r\n        this.wrapper = true;\r\n        this.getDatasetAtEvent = new EventEmitter();\r\n        this.getElementAtEvent = new EventEmitter();\r\n        this.getElementsAtEvent = new EventEmitter();\r\n    }\r\n    set height(value) {\r\n        this._height = coerceNumberProperty(value);\r\n    }\r\n    get height() {\r\n        return this._height;\r\n    }\r\n    set redraw(value) {\r\n        this._redraw = coerceBooleanProperty(value);\r\n    }\r\n    get redraw() {\r\n        return this._redraw;\r\n    }\r\n    set width(value) {\r\n        this._width = coerceNumberProperty(value);\r\n    }\r\n    get width() {\r\n        return this._width;\r\n    }\r\n    get hostClasses() {\r\n        return {\r\n            'chart-wrapper': this.wrapper\r\n        };\r\n    }\r\n    ngAfterViewInit() {\r\n        this.chartRender();\r\n        // this.chartUpdate();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes['data'] && !changes['data'].firstChange) {\r\n            this.chartUpdate();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.chartDestroy();\r\n    }\r\n    handleOnClick($event) {\r\n        if (!this.chart)\r\n            return;\r\n        const datasetAtEvent = this.chart.getElementsAtEventForMode($event, 'dataset', { intersect: true }, false);\r\n        this.getDatasetAtEvent.emit(datasetAtEvent);\r\n        const elementAtEvent = this.chart.getElementsAtEventForMode($event, 'nearest', { intersect: true }, false);\r\n        this.getElementAtEvent.emit(elementAtEvent);\r\n        const elementsAtEvent = this.chart.getElementsAtEventForMode($event, 'index', { intersect: true }, false);\r\n        this.getElementsAtEvent.emit(elementsAtEvent);\r\n    }\r\n    chartDestroy() {\r\n        var _a;\r\n        (_a = this.chart) === null || _a === void 0 ? void 0 : _a.destroy();\r\n    }\r\n    chartRender() {\r\n        if (!this.canvasElement)\r\n            return;\r\n        const ctx = this.canvasElement.nativeElement.getContext('2d');\r\n        this.ngZone.runOutsideAngular(() => {\r\n            const config = this.chartConfig();\r\n            if (config) {\r\n                this.chart = new Chart(ctx, config);\r\n                setTimeout(() => {\r\n                    this.renderer.setStyle(this.canvasElement.nativeElement, 'display', 'block');\r\n                });\r\n            }\r\n        });\r\n    }\r\n    chartUpdate() {\r\n        if (!this.chart)\r\n            return;\r\n        if (this.redraw) {\r\n            this.chartDestroy();\r\n            setTimeout(() => {\r\n                this.chartRender();\r\n            });\r\n            return;\r\n        }\r\n        const config = this.chartConfig();\r\n        if (this.options) {\r\n            Object.assign(this.chart.options, config.options);\r\n        }\r\n        if (!this.chart.config.data) {\r\n            this.chart.config.data = Object.assign({}, config.data);\r\n            this.chartUpdateOutsideAngular();\r\n        }\r\n        if (this.chart) {\r\n            Object.assign(this.chart.config.options, config.options);\r\n            Object.assign(this.chart.config.plugins, config.plugins);\r\n            Object.assign(this.chart.config.data, config.data);\r\n        }\r\n        this.chartUpdateOutsideAngular();\r\n    }\r\n    chartUpdateOutsideAngular() {\r\n        setTimeout(() => {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                var _a;\r\n                (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\r\n            });\r\n        });\r\n    }\r\n    chartToBase64Image() {\r\n        var _a;\r\n        return (_a = this.chart) === null || _a === void 0 ? void 0 : _a.toBase64Image();\r\n    }\r\n    chartDataConfig() {\r\n        var _a, _b, _c, _d;\r\n        return {\r\n            labels: (_b = (_a = this.data) === null || _a === void 0 ? void 0 : _a.labels) !== null && _b !== void 0 ? _b : [],\r\n            datasets: (_d = (_c = this.data) === null || _c === void 0 ? void 0 : _c.datasets) !== null && _d !== void 0 ? _d : []\r\n        };\r\n    }\r\n    chartOptions() {\r\n        return this.options;\r\n    }\r\n    chartConfig() {\r\n        this.chartCustomTooltips();\r\n        return {\r\n            data: this.chartDataConfig(),\r\n            options: this.chartOptions(),\r\n            plugins: this.plugins,\r\n            type: this.type\r\n        };\r\n    }\r\n    chartCustomTooltips() {\r\n        var _a, _b, _c;\r\n        if (this.customTooltips) {\r\n            const options = this.options;\r\n            // @ts-ignore\r\n            const plugins = (_a = this.options) === null || _a === void 0 ? void 0 : _a.plugins;\r\n            // @ts-ignore\r\n            const tooltip = (_c = (_b = this.options) === null || _b === void 0 ? void 0 : _b.plugins) === null || _c === void 0 ? void 0 : _c.tooltip;\r\n            this.options = merge(Object.assign(Object.assign({}, options), { plugins: Object.assign(Object.assign({}, plugins), { tooltip: Object.assign(Object.assign({}, tooltip), { enabled: false, mode: 'index', position: 'nearest', external: customTooltips }) }) }));\r\n        }\r\n    }\r\n    ;\r\n}\r\nChartjsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: ChartjsComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\r\nChartjsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.4\", type: ChartjsComponent, selector: \"c-chart\", inputs: { customTooltips: \"customTooltips\", data: \"data\", height: \"height\", id: \"id\", options: \"options\", plugins: \"plugins\", redraw: \"redraw\", type: \"type\", width: \"width\", wrapper: \"wrapper\" }, outputs: { getDatasetAtEvent: \"getDatasetAtEvent\", getElementAtEvent: \"getElementAtEvent\", getElementsAtEvent: \"getElementsAtEvent\" }, host: { properties: { \"style.height.px\": \"this.height\", \"style.width.px\": \"this.width\", \"class\": \"this.hostClasses\" } }, viewQueries: [{ propertyName: \"canvasElement\", first: true, predicate: [\"canvasElement\"], descendants: true }], exportAs: [\"cChart\"], usesOnChanges: true, ngImport: i0, template: \"<canvas\\r\\n  #canvasElement\\r\\n  (click)=\\\"handleOnClick($event)\\\"\\r\\n  [height]=\\\"height\\\"\\r\\n  [id]=\\\"id\\\"\\r\\n  [width]=\\\"width\\\"\\r\\n  role=\\\"img\\\"\\r\\n  style=\\\"display: none;\\\"\\r\\n>\\r\\n  <ng-content></ng-content>\\r\\n</canvas>\\r\\n\", styles: [\":host.chart-wrapper{display:block}\\n\"] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: ChartjsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'c-chart', exportAs: 'cChart', template: \"<canvas\\r\\n  #canvasElement\\r\\n  (click)=\\\"handleOnClick($event)\\\"\\r\\n  [height]=\\\"height\\\"\\r\\n  [id]=\\\"id\\\"\\r\\n  [width]=\\\"width\\\"\\r\\n  role=\\\"img\\\"\\r\\n  style=\\\"display: none;\\\"\\r\\n>\\r\\n  <ng-content></ng-content>\\r\\n</canvas>\\r\\n\", styles: [\":host.chart-wrapper{display:block}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, propDecorators: { customTooltips: [{\r\n                type: Input\r\n            }], data: [{\r\n                type: Input\r\n            }], height: [{\r\n                type: HostBinding,\r\n                args: ['style.height.px']\r\n            }, {\r\n                type: Input\r\n            }], id: [{\r\n                type: Input\r\n            }], options: [{\r\n                type: Input\r\n            }], plugins: [{\r\n                type: Input\r\n            }], redraw: [{\r\n                type: Input\r\n            }], type: [{\r\n                type: Input\r\n            }], width: [{\r\n                type: HostBinding,\r\n                args: ['style.width.px']\r\n            }, {\r\n                type: Input\r\n            }], wrapper: [{\r\n                type: Input\r\n            }], getDatasetAtEvent: [{\r\n                type: Output\r\n            }], getElementAtEvent: [{\r\n                type: Output\r\n            }], getElementsAtEvent: [{\r\n                type: Output\r\n            }], canvasElement: [{\r\n                type: ViewChild,\r\n                args: ['canvasElement']\r\n            }], hostClasses: [{\r\n                type: HostBinding,\r\n                args: ['class']\r\n            }] } });\n\nclass ChartjsModule {\r\n}\r\nChartjsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: ChartjsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nChartjsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: ChartjsModule, declarations: [ChartjsComponent], exports: [ChartjsComponent] });\r\nChartjsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: ChartjsModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.4\", ngImport: i0, type: ChartjsModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ChartjsComponent\r\n                    ],\r\n                    exports: [\r\n                        ChartjsComponent\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of coreui-angular-chartjs\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ChartjsComponent, ChartjsModule };\n"]},"metadata":{},"sourceType":"module"}